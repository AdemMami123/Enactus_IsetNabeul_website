rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow users to read their own profile or admins to read any profile
      allow read: if isOwner(userId) || isAdmin();
      
      // Allow users to create their own profile during registration
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow users to update their own profile (except role field)
      // Admins can update any profile including role
      allow update: if isOwner(userId) && 
                       (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['role'])) 
                       || isAdmin();
      
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // Members collection for public member data (shown on homepage)
    match /members/{memberId} {
      // Anyone can read member profiles (public)
      allow read: if true;
      
      // Only authenticated users can create member profiles
      allow create: if isAuthenticated();
      
      // Users can update their own member profile, admins can update any
      allow update: if isAuthenticated() && 
                       (request.auth.uid == resource.data.userId || isAdmin());
      
      // Only admins can delete member profiles
      allow delete: if isAdmin();
    }
  }
}
